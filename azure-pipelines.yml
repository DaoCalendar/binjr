trigger:
  branches:
    include:
      - master
      - '*-dev'
  tags:
    include:
      - v*

name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
  system.debug: false
  isTag: 'false'
  isSnapshot: 'false'

jobs:
  # Linux app bundle job
  - template: build-job.yml
    parameters:
      name: app_bundle_linux
      platform: linux
      pool:
        vmImage: 'ubuntu-16.04'

  # MacOS app bundle job
  - template: build-job.yml
    parameters:
      name: app_bundle_mac
      platform: mac
      pool:
        vmImage: 'macOS-10.14'

  # Windows app bundle job
  - template: build-job.yml
    parameters:
      name: app_bundle_windows
      platform: win
      pool:
        vmImage: 'windows-2019'

  # Publish to Maven repo
  - job: maven_publish
    dependsOn:
    - app_bundle_linux
    - app_bundle_windows
    - app_bundle_mac
    condition: succeeded()
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - script: |
          echo '##vso[task.setvariable variable=isTag;]true'
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
      - task: Gradle@2
        env:
          IS_TAG: $(isTag)
          REPO_TAG_NAME: $(Build.SourceBranchName)
          GPG_KEY_NAME: $(gpg.keyname)
          GPG_PASSPHRASE: $(gpg.passphrase)
          OSSRH_JIRA_PASSWORD: $(ossrh.password)
          OSSRH_JIRA_USERNAME: $(ossrh.username)
        inputs:
          gradleWrapperFile: 'gradlew'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.12'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          tasks: 'publishArtifacts '
      - bash: |
          git clone https://github.com/binjr/binjr.github.io build/tmp/binjr.github.io
          cd  build/tmp/binjr.github.io
          git config credential.helper store
          echo "https://binjr-bot:$GH_ACCESS_TOKEN@github.com" >> "$HOME/.git-credentials"
          git config user.email "binjr.bot@free.fr"
          git config user.name "binjr-bot"
          wget https://api.github.com/repos/binjr/binjr/releases/latest -O repos/binjr/binjr/releases/latest
          git commit -am "Release  $BUILD_SOURCEBRANCHNAME"
          git push
        env:
          GH_ACCESS_TOKEN: $(gh.access.token)
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

